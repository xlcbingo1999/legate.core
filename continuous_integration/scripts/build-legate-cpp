#!/usr/bin/env bash

build_legate_cpp() {
    set -xeuo pipefail;

    # Build + package legate.core C++ libs
    local cmake_args=(${CMAKE_ARGS:-});
    cmake_args+=(-DBUILD_SHARED_LIBS=ON);

    cmake_args+=(-DBUILD_MARCH=${BUILD_MARCH});

    cmake_args+=(-DCMAKE_BUILD_TYPE=Release);
    cmake_args+=(-DLegion_CUDA_ARCH=all-major);
    cmake_args+=(-DLegion_NETWORKS=${UCX_ENABLED:-ucx});
    cmake_args+=(-DLegion_USE_Python=ON);
    cmake_args+=(-DLegion_PYTHON_EXTRA_INSTALL_ARGS="--root;/;--prefix;\"\${CMAKE_INSTALL_PREFIX}\"");
    cmake_args+=(-DLegion_Python_Version=$(python3 --version 2>&1 | cut -d' ' -f2 | cut -d'.' -f3 --complement));
    cmake_args+=(-DLegion_REDOP_HALF=ON);
    cmake_args+=(-DLegion_REDOP_COMPLEX=ON);
    cmake_args+=(-DLegion_BUILD_JUPYTER=ON);
    cmake_args+=(-DLegion_BUILD_BINDINGS=ON);
    cmake_args+=(-DLegion_BOUNDS_CHECKS=${BOUNDS_CHECKS:-OFF});
    cmake_args+=(-DLegion_EMBED_GASNet_CONFIGURE_ARGS=${GASNet_CONFIGURE_ARGS:---with-ibv-max-hcas=8});
    cmake_args+=(-DLegion_MAX_DIM=${MAX_DIM:-4});
    cmake_args+=(-DLegion_MAX_FIELDS=${MAX_FIELDS:-256});
    cmake_args+=(-DLegion_SPY=${USE_SPY:-OFF});
    cmake_args+=(-DLegion_USE_CUDA=${USE_CUDA:-ON});
    cmake_args+=(-DLegion_USE_HDF5=${USE_HDF5:-OFF});
    cmake_args+=(-DLegion_USE_LLVM=${USE_LLVM:-OFF});
    cmake_args+=(-DLegion_USE_OpenMP=${USE_OPENMP:-OFF});
    cmake_args+=(-DLegion_BUILD_RUST_PROFILER=OFF)
    cmake_args+=(-Dlegate_core_BUILD_DOCS=ON);
    cmake_args+=(-DCMAKE_BUILD_PARALLEL_LEVEL=${JOBS:-$(nproc --ignore=1)});
    cmake_args+=(${@:-});

    sccache --show-stats;

    if test -n "${CONDA_PREFIX:-}"; then
        export OPENSSL_DIR="${CONDA_PREFIX}";
    fi

    rm -rf $REPO_DIR/build;

    time CMAKE_BUILD_PARALLEL_LEVEL=${JOBS:-$(nproc --ignore=1)} \
    cmake -S $REPO_DIR -B $REPO_DIR/build "${cmake_args[@]}" -GNinja;

    sccache --show-stats;

    time CMAKE_BUILD_PARALLEL_LEVEL=${JOBS:-$(nproc --ignore=1)} \
    cmake --build $REPO_DIR/build --verbose --parallel ${JOBS:-$(nproc --ignore=1)};

    sccache --show-stats;

    (
    mkdir -p /tmp/out;
    pushd $REPO_DIR/build;
    cpack -G TGZ;
    cp ./*-$(uname).tar.gz /tmp/out/;
    );
}

(build_legate_cpp "$@");
